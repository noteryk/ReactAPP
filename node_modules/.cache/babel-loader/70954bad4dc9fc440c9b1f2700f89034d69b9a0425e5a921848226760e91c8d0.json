{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\react-tailwind-app\\\\src\\\\context\\\\AppContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  data: null,\n  loading: false,\n  error: null\n};\nconst AppContext = /*#__PURE__*/createContext(undefined);\nconst appReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_DATA':\n      return {\n        ...state,\n        loading: true\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload\n      };\n    case 'SET_DATA':\n      return {\n        ...state,\n        data: action.payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(AppProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AppProvider;\nexport const useAppContext = () => {\n  _s2();\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useAppContext must be used within an AppProvider');\n  }\n  return context;\n};\n_s2(useAppContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","initialState","data","loading","error","AppContext","undefined","appReducer","state","action","type","payload","AppProvider","children","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAppContext","_s2","context","Error","$RefreshReg$"],"sources":["D:/test/react-tailwind-app/src/context/AppContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\n\ninterface AppState {\n    data: any;\n    loading: boolean;\n    error: string | null;\n}\n\ninterface AppAction {\n    type: 'FETCH_DATA' | 'SET_LOADING' | 'SET_ERROR' | 'SET_DATA';\n    payload?: any;\n}\n\nconst initialState: AppState = {\n    data: null,\n    loading: false,\n    error: null,\n};\n\nconst AppContext = createContext<{ state: AppState; dispatch: React.Dispatch<AppAction> } | undefined>(undefined);\n\nconst appReducer = (state: AppState, action: AppAction): AppState => {\n    switch (action.type) {\n        case 'FETCH_DATA':\n            return { ...state, loading: true };\n        case 'SET_LOADING':\n            return { ...state, loading: action.payload };\n        case 'SET_ERROR':\n            return { ...state, error: action.payload };\n        case 'SET_DATA':\n            return { ...state, data: action.payload, loading: false };\n        default:\n            return state;\n    }\n};\n\nexport const AppProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n    const [state, dispatch] = useReducer(appReducer, initialState);\n\n    return (\n        <AppContext.Provider value={{ state, dispatch }}>\n            {children}\n        </AppContext.Provider>\n    );\n};\n\nexport const useAppContext = () => {\n    const context = useContext(AppContext);\n    if (context === undefined) {\n        throw new Error('useAppContext must be used within an AppProvider');\n    }\n    return context;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAahF,MAAMC,YAAsB,GAAG;EAC3BC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,UAAU,gBAAGT,aAAa,CAAuEU,SAAS,CAAC;AAEjH,MAAMC,UAAU,GAAGA,CAACC,KAAe,EAAEC,MAAiB,KAAe;EACjE,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,YAAY;MACb,OAAO;QAAE,GAAGF,KAAK;QAAEL,OAAO,EAAE;MAAK,CAAC;IACtC,KAAK,aAAa;MACd,OAAO;QAAE,GAAGK,KAAK;QAAEL,OAAO,EAAEM,MAAM,CAACE;MAAQ,CAAC;IAChD,KAAK,WAAW;MACZ,OAAO;QAAE,GAAGH,KAAK;QAAEJ,KAAK,EAAEK,MAAM,CAACE;MAAQ,CAAC;IAC9C,KAAK,UAAU;MACX,OAAO;QAAE,GAAGH,KAAK;QAAEN,IAAI,EAAEO,MAAM,CAACE,OAAO;QAAER,OAAO,EAAE;MAAM,CAAC;IAC7D;MACI,OAAOK,KAAK;EACpB;AACJ,CAAC;AAED,OAAO,MAAMI,WAA8C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5E,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGjB,UAAU,CAACS,UAAU,EAAEN,YAAY,CAAC;EAE9D,oBACID,OAAA,CAACK,UAAU,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAET,KAAK;MAAEO;IAAS,CAAE;IAAAF,QAAA,EAC3CA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE9B,CAAC;AAACP,EAAA,CARWF,WAA8C;AAAAU,EAAA,GAA9CV,WAA8C;AAU3D,OAAO,MAAMW,aAAa,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC/B,MAAMC,OAAO,GAAG5B,UAAU,CAACQ,UAAU,CAAC;EACtC,IAAIoB,OAAO,KAAKnB,SAAS,EAAE;IACvB,MAAM,IAAIoB,KAAK,CAAC,kDAAkD,CAAC;EACvE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,aAAa;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}