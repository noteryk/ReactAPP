{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\react-tailwind-app\\\\src\\\\pages\\\\CO2Calculator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CO2_API_KEY = 'Bc0tU7kRVtzaHa6FQLcw'; // Replace with your Carbon Interface API key\n\nexport const fetchVehicleTypes = async () => {\n  try {\n    const response = await axios.get(`https://www.carboninterface.com/api/v1/vehicle_models`, {\n      headers: {\n        Authorization: `Bearer ${CO2_API_KEY}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching vehicle types:', error);\n    return [];\n  }\n};\nexport const calculateCO2 = async (distance, vehicleType) => {\n  try {\n    const response = await axios.post(`https://www.carboninterface.com/api/v1/estimates`, {\n      type: 'vehicle',\n      distance_unit: 'km',\n      distance_value: distance,\n      vehicle_model_id: vehicleType\n    }, {\n      headers: {\n        Authorization: `Bearer ${CO2_API_KEY}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error calculating CO2 emissions:', error);\n    return null;\n  }\n};\nconst CO2Calculator = () => {\n  _s();\n  const [distance, setDistance] = useState('');\n  const [vehicleType, setVehicleType] = useState('');\n  const [vehicleTypes, setVehicleTypes] = useState([]);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTypes = async () => {\n      const types = await fetchVehicleTypes();\n      setVehicleTypes(types);\n    };\n    fetchTypes();\n  }, []);\n  const handleCalculate = async () => {\n    if (!distance.trim() || !vehicleType.trim()) {\n      setError('Please enter both distance and vehicle type.');\n      return;\n    }\n    setError(null); // Clear any previous errors\n    const co2Result = await calculateCO2(Number(distance), vehicleType);\n    if (co2Result) {\n      setResult(co2Result);\n    } else {\n      setError('An error occurred while calculating CO2 emissions.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-full bg-gray-100 text-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-blue-600 mb-4\",\n      children: \"CO2 Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: distance,\n      onChange: e => setDistance(e.target.value),\n      placeholder: \"Enter distance in km...\",\n      className: \"border border-gray-300 rounded p-2 mb-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: vehicleType,\n      onChange: e => setVehicleType(e.target.value),\n      className: \"border border-gray-300 rounded p-2 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select vehicle type...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), vehicleTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: type.id,\n        children: type.name\n      }, type.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCalculate,\n      className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mt-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 bg-white rounded shadow w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800\",\n        children: \"CO2 Emissions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-700\",\n        children: [\"Distance: \", result.data.attributes.distance_value, \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-700\",\n        children: [\"Vehicle Type: \", result.data.attributes.vehicle_model_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-700\",\n        children: [\"CO2 Emissions: \", result.data.attributes.carbon_kg, \" kg\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(CO2Calculator, \"SY2a8+rUbRosFgb4e83AH6q//8Y=\");\n_c = CO2Calculator;\nexport default CO2Calculator;\nvar _c;\n$RefreshReg$(_c, \"CO2Calculator\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CO2_API_KEY","fetchVehicleTypes","response","get","headers","Authorization","data","error","console","calculateCO2","distance","vehicleType","post","type","distance_unit","distance_value","vehicle_model_id","CO2Calculator","_s","setDistance","setVehicleType","vehicleTypes","setVehicleTypes","result","setResult","setError","fetchTypes","types","handleCalculate","trim","co2Result","Number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","map","id","name","onClick","attributes","carbon_kg","_c","$RefreshReg$"],"sources":["D:/test/react-tailwind-app/src/pages/CO2Calculator.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CO2_API_KEY = 'Bc0tU7kRVtzaHa6FQLcw'; // Replace with your Carbon Interface API key\r\n\r\nexport const fetchVehicleTypes = async () => {\r\n  try {\r\n    const response = await axios.get(`https://www.carboninterface.com/api/v1/vehicle_models`, {\r\n      headers: {\r\n        Authorization: `Bearer ${CO2_API_KEY}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching vehicle types:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const calculateCO2 = async (distance: number, vehicleType: string) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `https://www.carboninterface.com/api/v1/estimates`,\r\n      {\r\n        type: 'vehicle',\r\n        distance_unit: 'km',\r\n        distance_value: distance,\r\n        vehicle_model_id: vehicleType,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${CO2_API_KEY}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error calculating CO2 emissions:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst CO2Calculator: React.FC = () => {\r\n  const [distance, setDistance] = useState('');\r\n  const [vehicleType, setVehicleType] = useState('');\r\n  const [vehicleTypes, setVehicleTypes] = useState<any[]>([]);\r\n  const [result, setResult] = useState<any | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchTypes = async () => {\r\n      const types = await fetchVehicleTypes();\r\n      setVehicleTypes(types);\r\n    };\r\n    fetchTypes();\r\n  }, []);\r\n\r\n  const handleCalculate = async () => {\r\n    if (!distance.trim() || !vehicleType.trim()) {\r\n      setError('Please enter both distance and vehicle type.');\r\n      return;\r\n    }\r\n    setError(null); // Clear any previous errors\r\n    const co2Result = await calculateCO2(Number(distance), vehicleType);\r\n    if (co2Result) {\r\n      setResult(co2Result);\r\n    } else {\r\n      setError('An error occurred while calculating CO2 emissions.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center h-full bg-gray-100 text-center p-4\">\r\n      <h1 className=\"text-3xl font-bold text-blue-600 mb-4\">CO2 Calculator</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={distance}\r\n        onChange={(e) => setDistance(e.target.value)}\r\n        placeholder=\"Enter distance in km...\"\r\n        className=\"border border-gray-300 rounded p-2 mb-4\"\r\n      />\r\n      <select\r\n        value={vehicleType}\r\n        onChange={(e) => setVehicleType(e.target.value)}\r\n        className=\"border border-gray-300 rounded p-2 mb-4\"\r\n      >\r\n        <option value=\"\">Select vehicle type...</option>\r\n        {vehicleTypes.map((type) => (\r\n          <option key={type.id} value={type.id}>\r\n            {type.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button\r\n        onClick={handleCalculate}\r\n        className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n      >\r\n        Calculate\r\n      </button>\r\n      {error && <p className=\"text-red-500 mt-2\">{error}</p>}\r\n      {result && (\r\n        <div className=\"mt-4 p-4 bg-white rounded shadow w-full max-w-md\">\r\n          <h2 className=\"text-2xl font-bold text-gray-800\">CO2 Emissions</h2>\r\n          <p className=\"text-lg text-gray-700\">\r\n            Distance: {result.data.attributes.distance_value} km\r\n          </p>\r\n          <p className=\"text-lg text-gray-700\">\r\n            Vehicle Type: {result.data.attributes.vehicle_model_id}\r\n          </p>\r\n          <p className=\"text-lg text-gray-700\">\r\n            CO2 Emissions: {result.data.attributes.carbon_kg} kg\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CO2Calculator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}