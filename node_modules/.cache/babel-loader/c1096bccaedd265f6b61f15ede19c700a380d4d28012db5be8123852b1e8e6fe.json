{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\react-tailwind-app\\\\src\\\\pages\\\\Giphy.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GIPHY_API_KEY = 'tAByUdBl3zvwFTwwLKiS2uXNEcob2HU2'; // Ensure this is a valid API key\n\nexport const fetchGiphy = async query => {\n  try {\n    const response = await axios.get(`https://api.giphy.com/v1/gifs/search`, {\n      params: {\n        api_key: GIPHY_API_KEY,\n        q: query,\n        limit: 12 // Limit to 12 memes\n      }\n    });\n    return response.data.data;\n  } catch (error) {\n    console.error('Error fetching Giphy data:', error);\n    return [];\n  }\n};\nconst Giphy = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [gifs, setGifs] = useState([]);\n  const [error, setError] = useState(null);\n  const handleSearch = async () => {\n    if (!query.trim()) {\n      setError('Please enter a search term.');\n      return;\n    }\n    setError(null); // Clear any previous errors\n    const results = await fetchGiphy(query);\n    setGifs(results);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-full bg-gray-100 text-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-blue-600 mb-4\",\n      children: \"Giphy Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Search for memes...\",\n      className: \"border border-gray-300 rounded p-2 mb-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mt-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4 mt-4\",\n      children: gifs.map(gif => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: gif.images.fixed_height.url,\n        alt: gif.title,\n        className: \"rounded shadow\",\n        style: {\n          width: '150px',\n          height: '150px'\n        } // Set uniform width and height\n      }, gif.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Giphy, \"OwtAGMC51g5TK8BZYJIblzIMW+4=\");\n_c = Giphy;\nexport default Giphy;\nvar _c;\n$RefreshReg$(_c, \"Giphy\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GIPHY_API_KEY","fetchGiphy","query","response","get","params","api_key","q","limit","data","error","console","Giphy","_s","setQuery","gifs","setGifs","setError","handleSearch","trim","results","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","gif","src","images","fixed_height","url","alt","title","style","width","height","id","_c","$RefreshReg$"],"sources":["D:/test/react-tailwind-app/src/pages/Giphy.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst GIPHY_API_KEY = 'tAByUdBl3zvwFTwwLKiS2uXNEcob2HU2'; // Ensure this is a valid API key\r\n\r\nexport const fetchGiphy = async (query: string) => {\r\n  try {\r\n    const response = await axios.get(`https://api.giphy.com/v1/gifs/search`, {\r\n      params: {\r\n        api_key: GIPHY_API_KEY,\r\n        q: query,\r\n        limit: 12, // Limit to 12 memes\r\n      },\r\n    });\r\n    return response.data.data;\r\n  } catch (error) {\r\n    console.error('Error fetching Giphy data:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst Giphy: React.FC = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [gifs, setGifs] = useState<any[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const handleSearch = async () => {\r\n    if (!query.trim()) {\r\n      setError('Please enter a search term.');\r\n      return;\r\n    }\r\n    setError(null); // Clear any previous errors\r\n    const results = await fetchGiphy(query);\r\n    setGifs(results);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center h-full bg-gray-100 text-center p-4\">\r\n      <h1 className=\"text-3xl font-bold text-blue-600 mb-4\">Giphy Search</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n        placeholder=\"Search for memes...\"\r\n        className=\"border border-gray-300 rounded p-2 mb-4\"\r\n      />\r\n      <button\r\n        onClick={handleSearch}\r\n        className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n      >\r\n        Search\r\n      </button>\r\n      {error && <p className=\"text-red-500 mt-2\">{error}</p>}\r\n      <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4 mt-4\">\r\n        {gifs.map((gif) => (\r\n          <img\r\n            key={gif.id}\r\n            src={gif.images.fixed_height.url}\r\n            alt={gif.title}\r\n            className=\"rounded shadow\"\r\n            style={{ width: '150px', height: '150px' }} // Set uniform width and height\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Giphy;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}