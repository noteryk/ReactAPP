{"ast":null,"code":"import React,{createContext,useContext,useReducer}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const initialState={data:null,loading:false,error:null};const AppContext=/*#__PURE__*/createContext(undefined);const appReducer=(state,action)=>{switch(action.type){case'FETCH_DATA':return{...state,loading:true};case'SET_LOADING':return{...state,loading:action.payload};case'SET_ERROR':return{...state,error:action.payload};case'SET_DATA':return{...state,data:action.payload,loading:false};default:return state;}};export const AppProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(appReducer,initialState);return/*#__PURE__*/_jsx(AppContext.Provider,{value:{state,dispatch},children:children});};export const useAppContext=()=>{const context=useContext(AppContext);if(context===undefined){throw new Error('useAppContext must be used within an AppProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsx","_jsx","initialState","data","loading","error","AppContext","undefined","appReducer","state","action","type","payload","AppProvider","_ref","children","dispatch","Provider","value","useAppContext","context","Error"],"sources":["D:/test/react-tailwind-app/src/context/AppContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\n\ninterface AppState {\n    data: any;\n    loading: boolean;\n    error: string | null;\n}\n\ninterface AppAction {\n    type: 'FETCH_DATA' | 'SET_LOADING' | 'SET_ERROR' | 'SET_DATA';\n    payload?: any;\n}\n\nconst initialState: AppState = {\n    data: null,\n    loading: false,\n    error: null,\n};\n\nconst AppContext = createContext<{ state: AppState; dispatch: React.Dispatch<AppAction> } | undefined>(undefined);\n\nconst appReducer = (state: AppState, action: AppAction): AppState => {\n    switch (action.type) {\n        case 'FETCH_DATA':\n            return { ...state, loading: true };\n        case 'SET_LOADING':\n            return { ...state, loading: action.payload };\n        case 'SET_ERROR':\n            return { ...state, error: action.payload };\n        case 'SET_DATA':\n            return { ...state, data: action.payload, loading: false };\n        default:\n            return state;\n    }\n};\n\nexport const AppProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n    const [state, dispatch] = useReducer(appReducer, initialState);\n\n    return (\n        <AppContext.Provider value={{ state, dispatch }}>\n            {children}\n        </AppContext.Provider>\n    );\n};\n\nexport const useAppContext = () => {\n    const context = useContext(AppContext);\n    if (context === undefined) {\n        throw new Error('useAppContext must be used within an AppProvider');\n    }\n    return context;\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,UAAU,KAAmB,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAahF,KAAM,CAAAC,YAAsB,CAAG,CAC3BC,IAAI,CAAE,IAAI,CACVC,OAAO,CAAE,KAAK,CACdC,KAAK,CAAE,IACX,CAAC,CAED,KAAM,CAAAC,UAAU,cAAGT,aAAa,CAAuEU,SAAS,CAAC,CAEjH,KAAM,CAAAC,UAAU,CAAGA,CAACC,KAAe,CAAEC,MAAiB,GAAe,CACjE,OAAQA,MAAM,CAACC,IAAI,EACf,IAAK,YAAY,CACb,MAAO,CAAE,GAAGF,KAAK,CAAEL,OAAO,CAAE,IAAK,CAAC,CACtC,IAAK,aAAa,CACd,MAAO,CAAE,GAAGK,KAAK,CAAEL,OAAO,CAAEM,MAAM,CAACE,OAAQ,CAAC,CAChD,IAAK,WAAW,CACZ,MAAO,CAAE,GAAGH,KAAK,CAAEJ,KAAK,CAAEK,MAAM,CAACE,OAAQ,CAAC,CAC9C,IAAK,UAAU,CACX,MAAO,CAAE,GAAGH,KAAK,CAAEN,IAAI,CAAEO,MAAM,CAACE,OAAO,CAAER,OAAO,CAAE,KAAM,CAAC,CAC7D,QACI,MAAO,CAAAK,KAAK,CACpB,CACJ,CAAC,CAED,MAAO,MAAM,CAAAI,WAA8C,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvE,KAAM,CAACL,KAAK,CAAEO,QAAQ,CAAC,CAAGjB,UAAU,CAACS,UAAU,CAAEN,YAAY,CAAC,CAE9D,mBACID,IAAA,CAACK,UAAU,CAACW,QAAQ,EAACC,KAAK,CAAE,CAAET,KAAK,CAAEO,QAAS,CAAE,CAAAD,QAAA,CAC3CA,QAAQ,CACQ,CAAC,CAE9B,CAAC,CAED,MAAO,MAAM,CAAAI,aAAa,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,OAAO,CAAGtB,UAAU,CAACQ,UAAU,CAAC,CACtC,GAAIc,OAAO,GAAKb,SAAS,CAAE,CACvB,KAAM,IAAI,CAAAc,KAAK,CAAC,kDAAkD,CAAC,CACvE,CACA,MAAO,CAAAD,OAAO,CAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}