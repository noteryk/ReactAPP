{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\react-tailwind-app\\\\src\\\\pages\\\\CO2Calculator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIMATIQ_API_KEY = '4T8QZ62NW10R17EYJ6RX9GR248'; // Replace with your Climatiq API key\n\n// Define the type for the API response\n\n// Define the calculateCO2 function with proper types\nexport const calculateCO2 = async (distance, vehicleType) => {\n  try {\n    const response = await axios.post(`https://beta3.api.climatiq.io/estimate`, {\n      emission_factor: {\n        activity_id: 'passenger_vehicle-vehicle_type_automobile-fuel_source_na-distance_na-engine_size_na'\n      },\n      parameters: {\n        distance: distance,\n        distance_unit: 'km',\n        vehicle_type: vehicleType\n      }\n    }, {\n      headers: {\n        Authorization: `Bearer ${CLIMATIQ_API_KEY}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error calculating CO2 emissions:', error);\n    if (error.response) {\n      console.error('Error Response Data:', error.response.data);\n      console.error('Error Response Status:', error.response.status);\n    } else if (error.request) {\n      console.error('Error Request:', error.request);\n    } else {\n      console.error('Error Message:', error.message);\n    }\n    return null;\n  }\n};\nconst CO2Calculator = () => {\n  _s();\n  const [distance, setDistance] = useState('');\n  const [vehicleType, setVehicleType] = useState('');\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const handleCalculate = async () => {\n    if (!distance.trim() || !vehicleType.trim()) {\n      setError('Please enter both distance and vehicle type.');\n      return;\n    }\n    setError(null);\n    const co2Result = await calculateCO2(Number(distance), vehicleType);\n    if (co2Result) {\n      setResult(co2Result);\n    } else {\n      setError('An error occurred while calculating CO2 emissions.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-full bg-gray-100 text-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-blue-600 mb-4\",\n      children: \"CO2 Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: distance,\n      onChange: e => setDistance(e.target.value),\n      placeholder: \"Enter distance in km...\",\n      className: \"border border-gray-300 rounded p-2 mb-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: vehicleType,\n      onChange: e => setVehicleType(e.target.value),\n      className: \"border border-gray-300 rounded p-2 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select vehicle type...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"small_petrol_car\",\n        children: \"Small Petrol Car\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"medium_petrol_car\",\n        children: \"Medium Petrol Car\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"large_petrol_car\",\n        children: \"Large Petrol Car\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"small_diesel_car\",\n        children: \"Small Diesel Car\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"medium_diesel_car\",\n        children: \"Medium Diesel Car\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"large_diesel_car\",\n        children: \"Large Diesel Car\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"electric_car\",\n        children: \"Electric Car\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"hybrid_car\",\n        children: \"Hybrid Car\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCalculate,\n      className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mt-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 bg-white rounded shadow w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800\",\n        children: \"CO2 Emissions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-700\",\n        children: [\"Distance: \", result.activity_data.distance, \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-700\",\n        children: [\"Vehicle Type: \", result.activity_data.vehicle_type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-700\",\n        children: [\"CO2 Emissions: \", result.co2e, \" \", result.co2e_unit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(CO2Calculator, \"lcX2L9m+uJtwXCn4SXCPF3SFS7o=\");\n_c = CO2Calculator;\nexport default CO2Calculator;\nvar _c;\n$RefreshReg$(_c, \"CO2Calculator\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CLIMATIQ_API_KEY","calculateCO2","distance","vehicleType","response","post","emission_factor","activity_id","parameters","distance_unit","vehicle_type","headers","Authorization","data","error","console","status","request","message","CO2Calculator","_s","setDistance","setVehicleType","result","setResult","setError","handleCalculate","trim","co2Result","Number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","activity_data","co2e","co2e_unit","_c","$RefreshReg$"],"sources":["D:/test/react-tailwind-app/src/pages/CO2Calculator.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CLIMATIQ_API_KEY = '4T8QZ62NW10R17EYJ6RX9GR248'; // Replace with your Climatiq API key\r\n\r\n// Define the type for the API response\r\ninterface CO2Response {\r\n  co2e: number;\r\n  co2e_unit: string;\r\n  activity_data: {\r\n    distance: number;\r\n    distance_unit: string;\r\n    vehicle_type: string;\r\n  };\r\n}\r\n\r\n// Define the calculateCO2 function with proper types\r\nexport const calculateCO2 = async (\r\n  distance: number,\r\n  vehicleType: string\r\n): Promise<CO2Response | null> => {\r\n  try {\r\n    const response = await axios.post<CO2Response>(\r\n      `https://beta3.api.climatiq.io/estimate`,\r\n      {\r\n        emission_factor: {\r\n          activity_id: 'passenger_vehicle-vehicle_type_automobile-fuel_source_na-distance_na-engine_size_na',\r\n        },\r\n        parameters: {\r\n          distance: distance,\r\n          distance_unit: 'km',\r\n          vehicle_type: vehicleType,\r\n        },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${CLIMATIQ_API_KEY}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Error calculating CO2 emissions:', error);\r\n    if (error.response) {\r\n      console.error('Error Response Data:', error.response.data);\r\n      console.error('Error Response Status:', error.response.status);\r\n    } else if (error.request) {\r\n      console.error('Error Request:', error.request);\r\n    } else {\r\n      console.error('Error Message:', error.message);\r\n    }\r\n    return null;\r\n  }\r\n};\r\n\r\nconst CO2Calculator: React.FC = () => {\r\n  const [distance, setDistance] = useState('');\r\n  const [vehicleType, setVehicleType] = useState('');\r\n  const [result, setResult] = useState<CO2Response | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const handleCalculate = async () => {\r\n    if (!distance.trim() || !vehicleType.trim()) {\r\n      setError('Please enter both distance and vehicle type.');\r\n      return;\r\n    }\r\n    setError(null);\r\n    const co2Result = await calculateCO2(Number(distance), vehicleType);\r\n    if (co2Result) {\r\n      setResult(co2Result);\r\n    } else {\r\n      setError('An error occurred while calculating CO2 emissions.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center h-full bg-gray-100 text-center p-4\">\r\n      <h1 className=\"text-3xl font-bold text-blue-600 mb-4\">CO2 Calculator</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={distance}\r\n        onChange={(e) => setDistance(e.target.value)}\r\n        placeholder=\"Enter distance in km...\"\r\n        className=\"border border-gray-300 rounded p-2 mb-4\"\r\n      />\r\n      <select\r\n        value={vehicleType}\r\n        onChange={(e) => setVehicleType(e.target.value)}\r\n        className=\"border border-gray-300 rounded p-2 mb-4\"\r\n      >\r\n        <option value=\"\">Select vehicle type...</option>\r\n        <option value=\"small_petrol_car\">Small Petrol Car</option>\r\n        <option value=\"medium_petrol_car\">Medium Petrol Car</option>\r\n        <option value=\"large_petrol_car\">Large Petrol Car</option>\r\n        <option value=\"small_diesel_car\">Small Diesel Car</option>\r\n        <option value=\"medium_diesel_car\">Medium Diesel Car</option>\r\n        <option value=\"large_diesel_car\">Large Diesel Car</option>\r\n        <option value=\"electric_car\">Electric Car</option>\r\n        <option value=\"hybrid_car\">Hybrid Car</option>\r\n      </select>\r\n      <button\r\n        onClick={handleCalculate}\r\n        className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n      >\r\n        Calculate\r\n      </button>\r\n      {error && <p className=\"text-red-500 mt-2\">{error}</p>}\r\n      {result && (\r\n        <div className=\"mt-4 p-4 bg-white rounded shadow w-full max-w-md\">\r\n          <h2 className=\"text-2xl font-bold text-gray-800\">CO2 Emissions</h2>\r\n          <p className=\"text-lg text-gray-700\">Distance: {result.activity_data.distance} km</p>\r\n          <p className=\"text-lg text-gray-700\">Vehicle Type: {result.activity_data.vehicle_type}</p>\r\n          <p className=\"text-lg text-gray-700\">\r\n            CO2 Emissions: {result.co2e} {result.co2e_unit}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CO2Calculator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAG,4BAA4B,CAAC,CAAC;;AAEvD;;AAWA;AACA,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAC1BC,QAAgB,EAChBC,WAAmB,KACa;EAChC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAC/B,wCAAwC,EACxC;MACEC,eAAe,EAAE;QACfC,WAAW,EAAE;MACf,CAAC;MACDC,UAAU,EAAE;QACVN,QAAQ,EAAEA,QAAQ;QAClBO,aAAa,EAAE,IAAI;QACnBC,YAAY,EAAEP;MAChB;IACF,CAAC,EACD;MACEQ,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUZ,gBAAgB,EAAE;QAC3C,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IACD,OAAOI,QAAQ,CAACS,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAU,EAAE;IACnBC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,IAAIA,KAAK,CAACV,QAAQ,EAAE;MAClBW,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACV,QAAQ,CAACS,IAAI,CAAC;MAC1DE,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACV,QAAQ,CAACY,MAAM,CAAC;IAChE,CAAC,MAAM,IAAIF,KAAK,CAACG,OAAO,EAAE;MACxBF,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACG,OAAO,CAAC;IAChD,CAAC,MAAM;MACLF,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACI,OAAO,CAAC;IAChD;IACA,OAAO,IAAI;EACb;AACF,CAAC;AAED,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAAClB,QAAQ,EAAEmB,WAAW,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,WAAW,EAAEmB,cAAc,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAqB,IAAI,CAAC;EAC9D,MAAM,CAACkB,KAAK,EAAEW,QAAQ,CAAC,GAAG7B,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAM8B,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACxB,QAAQ,CAACyB,IAAI,CAAC,CAAC,IAAI,CAACxB,WAAW,CAACwB,IAAI,CAAC,CAAC,EAAE;MAC3CF,QAAQ,CAAC,8CAA8C,CAAC;MACxD;IACF;IACAA,QAAQ,CAAC,IAAI,CAAC;IACd,MAAMG,SAAS,GAAG,MAAM3B,YAAY,CAAC4B,MAAM,CAAC3B,QAAQ,CAAC,EAAEC,WAAW,CAAC;IACnE,IAAIyB,SAAS,EAAE;MACbJ,SAAS,CAACI,SAAS,CAAC;IACtB,CAAC,MAAM;MACLH,QAAQ,CAAC,oDAAoD,CAAC;IAChE;EACF,CAAC;EAED,oBACE1B,OAAA;IAAK+B,SAAS,EAAC,8EAA8E;IAAAC,QAAA,gBAC3FhC,OAAA;MAAI+B,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzEpC,OAAA;MACEqC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEnC,QAAS;MAChBoC,QAAQ,EAAGC,CAAC,IAAKlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,WAAW,EAAC,yBAAyB;MACrCX,SAAS,EAAC;IAAyC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACFpC,OAAA;MACEsC,KAAK,EAAElC,WAAY;MACnBmC,QAAQ,EAAGC,CAAC,IAAKjB,cAAc,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAChDP,SAAS,EAAC,yCAAyC;MAAAC,QAAA,gBAEnDhC,OAAA;QAAQsC,KAAK,EAAC,EAAE;QAAAN,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChDpC,OAAA;QAAQsC,KAAK,EAAC,kBAAkB;QAAAN,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1DpC,OAAA;QAAQsC,KAAK,EAAC,mBAAmB;QAAAN,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5DpC,OAAA;QAAQsC,KAAK,EAAC,kBAAkB;QAAAN,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1DpC,OAAA;QAAQsC,KAAK,EAAC,kBAAkB;QAAAN,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1DpC,OAAA;QAAQsC,KAAK,EAAC,mBAAmB;QAAAN,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5DpC,OAAA;QAAQsC,KAAK,EAAC,kBAAkB;QAAAN,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1DpC,OAAA;QAAQsC,KAAK,EAAC,cAAc;QAAAN,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClDpC,OAAA;QAAQsC,KAAK,EAAC,YAAY;QAAAN,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACTpC,OAAA;MACE2C,OAAO,EAAEhB,eAAgB;MACzBI,SAAS,EAAC,4DAA4D;MAAAC,QAAA,EACvE;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRrB,KAAK,iBAAIf,OAAA;MAAG+B,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAEjB;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrDZ,MAAM,iBACLxB,OAAA;MAAK+B,SAAS,EAAC,kDAAkD;MAAAC,QAAA,gBAC/DhC,OAAA;QAAI+B,SAAS,EAAC,kCAAkC;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnEpC,OAAA;QAAG+B,SAAS,EAAC,uBAAuB;QAAAC,QAAA,GAAC,YAAU,EAACR,MAAM,CAACoB,aAAa,CAACzC,QAAQ,EAAC,KAAG;MAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACrFpC,OAAA;QAAG+B,SAAS,EAAC,uBAAuB;QAAAC,QAAA,GAAC,gBAAc,EAACR,MAAM,CAACoB,aAAa,CAACjC,YAAY;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1FpC,OAAA;QAAG+B,SAAS,EAAC,uBAAuB;QAAAC,QAAA,GAAC,iBACpB,EAACR,MAAM,CAACqB,IAAI,EAAC,GAAC,EAACrB,MAAM,CAACsB,SAAS;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CAhEID,aAAuB;AAAA2B,EAAA,GAAvB3B,aAAuB;AAkE7B,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}