{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\react-tailwind-app\\\\src\\\\pages\\\\CO2Calculator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIMATIQ_API_KEY = '4T8QZ62NW10R17EYJ6RX9GR248'; // Replace with your Climatiq API key\n\n// Define the type for the API response\n\nconst calculateElectricityCO2 = async (energy, energyUnit) => {\n  try {\n    const response = await axios.post(`https://api.climatiq.io/data/v1/estimate`, {\n      emission_factor: {\n        activity_id: 'electricity-supply_grid-source_residual_mix',\n        data_version: '^6'\n      },\n      parameters: {\n        energy: energy,\n        energy_unit: energyUnit\n      }\n    }, {\n      headers: {\n        Authorization: `Bearer ${CLIMATIQ_API_KEY}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error calculating electricity CO2 emissions:', error);\n    return null;\n  }\n};\nconst CO2Calculator = () => {\n  _s();\n  const [energy, setEnergy] = useState('');\n  const [energyUnit, setEnergyUnit] = useState('kWh');\n  const [electricityResult, setElectricityResult] = useState(null);\n  const [electricityError, setElectricityError] = useState(null);\n  const handleElectricityCalculate = async () => {\n    if (!energy.trim()) {\n      setElectricityError('Please enter the energy consumption.');\n      return;\n    }\n    setElectricityError(null);\n    const result = await calculateElectricityCO2(Number(energy), energyUnit);\n    if (result) {\n      setElectricityResult(result);\n    } else {\n      setElectricityError('An error occurred while calculating electricity CO2 emissions.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-full bg-gray-100 text-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-blue-600 mb-4\",\n      children: \"Electricity CO2 Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: energy,\n      onChange: e => setEnergy(e.target.value),\n      placeholder: \"Enter energy consumption...\",\n      className: \"border border-gray-300 rounded p-2 mb-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: energyUnit,\n      onChange: e => setEnergyUnit(e.target.value),\n      className: \"border border-gray-300 rounded p-2 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"kWh\",\n        children: \"kWh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"MWh\",\n        children: \"MWh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleElectricityCalculate,\n      className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), electricityError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mt-2\",\n      children: electricityError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 28\n    }, this), electricityResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 bg-white rounded shadow w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800\",\n        children: \"CO2 Emissions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-700\",\n        children: [\"Energy Consumption: \", electricityResult.activity_data.activity_value, ' ', electricityResult.activity_data.activity_unit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-700\",\n        children: [\"Emission Factor: \", electricityResult.emission_factor.name, \" (\", electricityResult.emission_factor.region, \", \", electricityResult.emission_factor.year, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-700\",\n        children: [\"CO2 Emissions: \", electricityResult.co2e, \" \", electricityResult.co2e_unit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(CO2Calculator, \"0k9vXIMOufj1L7EB4xdzxIJNxGo=\");\n_c = CO2Calculator;\nexport default CO2Calculator;\nvar _c;\n$RefreshReg$(_c, \"CO2Calculator\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CLIMATIQ_API_KEY","calculateElectricityCO2","energy","energyUnit","response","post","emission_factor","activity_id","data_version","parameters","energy_unit","headers","Authorization","data","error","console","CO2Calculator","_s","setEnergy","setEnergyUnit","electricityResult","setElectricityResult","electricityError","setElectricityError","handleElectricityCalculate","trim","result","Number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","activity_data","activity_value","activity_unit","name","region","year","co2e","co2e_unit","_c","$RefreshReg$"],"sources":["D:/test/react-tailwind-app/src/pages/CO2Calculator.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CLIMATIQ_API_KEY = '4T8QZ62NW10R17EYJ6RX9GR248'; // Replace with your Climatiq API key\r\n\r\n// Define the type for the API response\r\ninterface CO2Response {\r\n  co2e: number;\r\n  co2e_unit: string;\r\n  activity_data: {\r\n    activity_value: number;\r\n    activity_unit: string;\r\n  };\r\n  emission_factor: {\r\n    name: string;\r\n    source: string;\r\n    year: number;\r\n    region: string;\r\n  };\r\n}\r\n\r\nconst calculateElectricityCO2 = async (\r\n  energy: number,\r\n  energyUnit: string\r\n): Promise<CO2Response | null> => {\r\n  try {\r\n    const response = await axios.post<CO2Response>(\r\n      `https://api.climatiq.io/data/v1/estimate`,\r\n      {\r\n        emission_factor: {\r\n          activity_id: 'electricity-supply_grid-source_residual_mix',\r\n          data_version: '^6',\r\n        },\r\n        parameters: {\r\n          energy: energy,\r\n          energy_unit: energyUnit,\r\n        },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${CLIMATIQ_API_KEY}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Error calculating electricity CO2 emissions:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst CO2Calculator: React.FC = () => {\r\n  const [energy, setEnergy] = useState('');\r\n  const [energyUnit, setEnergyUnit] = useState('kWh');\r\n  const [electricityResult, setElectricityResult] = useState<CO2Response | null>(null);\r\n  const [electricityError, setElectricityError] = useState<string | null>(null);\r\n\r\n  const handleElectricityCalculate = async () => {\r\n    if (!energy.trim()) {\r\n      setElectricityError('Please enter the energy consumption.');\r\n      return;\r\n    }\r\n    setElectricityError(null);\r\n    const result = await calculateElectricityCO2(Number(energy), energyUnit);\r\n    if (result) {\r\n      setElectricityResult(result);\r\n    } else {\r\n      setElectricityError('An error occurred while calculating electricity CO2 emissions.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center h-full bg-gray-100 text-center p-4\">\r\n      <h1 className=\"text-3xl font-bold text-blue-600 mb-4\">Electricity CO2 Calculator</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={energy}\r\n        onChange={(e) => setEnergy(e.target.value)}\r\n        placeholder=\"Enter energy consumption...\"\r\n        className=\"border border-gray-300 rounded p-2 mb-4\"\r\n      />\r\n      <select\r\n        value={energyUnit}\r\n        onChange={(e) => setEnergyUnit(e.target.value)}\r\n        className=\"border border-gray-300 rounded p-2 mb-4\"\r\n      >\r\n        <option value=\"kWh\">kWh</option>\r\n        <option value=\"MWh\">MWh</option>\r\n      </select>\r\n      <button\r\n        onClick={handleElectricityCalculate}\r\n        className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n      >\r\n        Calculate\r\n      </button>\r\n      {electricityError && <p className=\"text-red-500 mt-2\">{electricityError}</p>}\r\n      {electricityResult && (\r\n        <div className=\"mt-4 p-4 bg-white rounded shadow w-full max-w-md\">\r\n          <h2 className=\"text-2xl font-bold text-gray-800\">CO2 Emissions</h2>\r\n          <p className=\"text-lg text-gray-700\">\r\n            Energy Consumption: {electricityResult.activity_data.activity_value}{' '}\r\n            {electricityResult.activity_data.activity_unit}\r\n          </p>\r\n          <p className=\"text-lg text-gray-700\">\r\n            Emission Factor: {electricityResult.emission_factor.name} (\r\n            {electricityResult.emission_factor.region}, {electricityResult.emission_factor.year})\r\n          </p>\r\n          <p className=\"text-lg text-gray-700\">\r\n            CO2 Emissions: {electricityResult.co2e} {electricityResult.co2e_unit}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CO2Calculator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}